@model string

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Partie en cours";
}

@{ int canvasSize = 400; }
@{ int caseNumber = 8; }
<script src="/Scripts/DaChess.Time.js"></script>
<script type="text/javascript">
    var party; // stockage (JSon) de l'objet PartyModel
    var playerToken; // token du joueur connecté
    var myBoard; // plateau de jeu, array de cases
    var myHistory; // historique de la partie
    var images = {}; // array d'images du jeu (pièces du jeu d'échec);

    @String.Concat("var size = ", canvasSize); // taille en pixels du plateau
    @String.Concat("var caseNumber = ", caseNumber); // nombre de cases du plateau
    var moveStep = 0; // compteur de cases sélectionnées
    var moveText = ''; // texte du coup

    var isWhite = false; // true si le joueur est le joueur blanc
    var isBlack = false; // true si le joueur est le joueur noir

    var time = 0; // utilisé pour les compteurs de temps
    var countDown; // le compteur de temps

    var partyOver = false; // un marqueur pour éviter les popup à répétition si un des joueurs refresh sa page sur un mat ou un pat

    // liste des images des pièces
    var sources = {
        b_rook: '/Content/Images/Pieces/b_rook.svg',
        b_knight: '/Content/Images/Pieces/b_knight.svg',
        b_bishop: '/Content/Images/Pieces/b_bishops.svg',
        b_queen: '/Content/Images/Pieces/b_queen.svg',
        b_king: '/Content/Images/Pieces/b_king.svg',
        b_pawn: '/Content/Images/Pieces/b_pawn.svg',
        w_rook: '/Content/Images/Pieces/w_rook.svg',
        w_knight: '/Content/Images/Pieces/w_knight.svg',
        w_bishop: '/Content/Images/Pieces/w_bishops.svg',
        w_queen: '/Content/Images/Pieces/w_queen.svg',
        w_king: '/Content/Images/Pieces/w_king.svg',
        w_pawn: '/Content/Images/Pieces/w_pawn.svg'
    };

    // Les deux couleurs du jeu
    var colors = {
        white: 1,
        black: 2
    };

    // différentes valeurs que peut prendre PartyState
    var partyStates = {
        waitPlayers: 1,
        running: 2,
        drawn: 3,
        overWhiteWin: 4,
        overBlackWin: 5
    };

    // différentes valeurs que peut prendre PlayerState
    var playerStates = {
        undefined: 1,
        canMove: 2,
        waitHisTurn: 3,
        canPromote: 4,
        askDrawn: 5,
        pat: 6,
        resign: 7,
        check: 8,
        checkMat: 9,
        askToReplay: 10,
        timeOver: 11
    };

    // les types de cadences de la partie
    var cadences = {
        noLimits: 1,
        classic: 2,
        fischer: 3
    };

    $(document).ready(function () {
        loadCookie('@Model'); // on cherche à initialiser les données de joueur depuis les cookies (cas du retour sur la page)

        // chargement des images du jeu et tracé du premier canvas une fois celles-ci chargées
        loadImages(sources, function () {
            // récupération de la partie et extraction du plateau et de l'historique
            reloadParty('@Model');
        });

        var partyHub = $.connection.partyHub;

        // une fois que le serveur est prêt
        $.connection.hub.start().done(function () {
            // on abonne l'utilisateur sur la page au groupe de la partie
            partyHub.server.joinParty('@Model');
        });

        partyHub.client.addNewMessageToPage = function (name, message) {
            appendMessage(name, message);
        };

        partyHub.client.addPlayerWhite = function () {
            reloadParty('@Model');
        };

        partyHub.client.addPlayerBlack = function () {
            reloadParty('@Model');
        };

        partyHub.client.moveOver = function () {
            reloadParty('@Model');
        };

        partyHub.client.SendInfo = function (info) {
            setMsg(info);
        };

        partyHub.client.playerResign = function () {
            reloadParty('@Model');
        };

        partyHub.client.playerAskDrawn = function () {
            respondToDrawnAsk('@Model');
        };

        partyHub.client.playerAcceptDrawn = function () {
            reloadParty('@Model');
        };

        partyHub.client.playerAskToReplay = function () {
            reloadParty('@Model');
        };

        partyHub.client.playerTimeIsExpired = function () {
            reloadParty('@Model');
        };

        partyHub.client.askToRedirectToNewParty = function (newPartyName) {
            redirectToNewParty(newPartyName);
        };
    });
</script>

@Html.Partial("_PlayModals", Model)

<br />
<!-- première ligne pour les infos -->
<div class="row hidden-xs hidden-sm">
    <div class="col-md-6">
        <h1>Partie @Model</h1>
    </div>
</div>
<br />

<!-- ligne avec les coups, le plateau et le tchat -->
<div class="row">
    <div class="col-md-3" id="moveDiv">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-sm-12">
                        <img src="/Content/Images/black_active.png" class="playerIcon hidden" id="blackIcon" />
                        <img src="/Content/Images/white_active.png" class="playerIcon hidden" id="whiteIcon" />
                        <span id="infoDiv">Infos</span>
                    </div>
                </div>
            </div>
            <div class="panel-body">
                <div class="row" id="btnDiv" style="display:none">
                    <div class="col-sm-12">
                        <button type="button" id="btnResign" name="btnResign" class="btn btn-default btn-xs" onclick="resign(event, '@Model')">Abandonner</button>
                        <button type="button" id="btnDrawn" name="btnDrawn" class="btn btn-default btn-xs" onclick="askForDrawn('@Model')">Proposer la nulle</button>
                    </div>
                </div>
                <br />
                <div class="row" id="btnChoiseColorDiv">
                    <div class="col-md-6 alignRight" id="whiteBtnDiv">
                        <button type="button" id="whiteBtn" class="btn btn-xs" onclick="addPlayer('@Model', colors.white)" disabled>Jouer les blancs</button><br />
                    </div>
                    <div class="col-md-6" id="blackBtnDiv">
                        <button type="button" id="blackBtn" class="btn btn-xs" onclick="addPlayer('@Model', colors.black)" disabled>Jouer les noirs</button>
                    </div>
                </div>
                <!-- les images indiquant qui doit jouer -->
                <div class="row" id="playerTurnDiv">
                    <div class="col-md-8">
                        <img src="/Content/Images/blackTurn.png" id="blackTurnImg" style="display:none" />
                        <img src="/Content/Images/whiteTurn.png" id="whiteTurnImg" style="display:none" />
                    </div>
                    <div id="timeDiv" class="col-md-4">
                        <div class="alignLeft">
                            <br />
                            <span id="timeWhite">01:25:12</span>
                            <br /><br />
                            <span id="timeBlack">00:57:52</span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div id="msgDivParent" class="col-md-12" style="display:none">
                        <div id="msgDiv" class="alert alert-warning">Bienvenue</div>
                    </div>
                </div>
                <!-- la div de fin de partie -->
                <div class="row" id="endPartyDiv" style="display:none">
                    <div class="col-md-12">
                        Que voulez vous faire ?<br />
                        <button type="button" id="replayBtn" class="btn btn-xs" onclick="askForReplay('@Model')">Proposer de rejouer</button>&nbsp;&nbsp;<a href="/Home/Index">Retour accueil</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default hidden-xs hidden-sm">
            <div class="panel-heading">Historique</div>
            <div class="panel-body">
                <ul id="moves"></ul>
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="panel panel-default">
            <div class="panel-heading" id="turnDiv"></div>
            <div class="panel-body">
                <div class="centerBlock">
                    <canvas id="canvas" width="@canvasSize" height="@canvasSize" style="border:1px solid #000000;" onclick="getMousePos(this, event)"></canvas>
                </div>
            </div>
        </div>
    </div>
    <!-- Tchat -->
    <div class="col-md-4 hidden-xs hidden-sm">
        <div class="panel panel-default">
            <div class="panel-heading">Tchat</div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-sm-10">
                        <textarea id="message" rows="2" cols="40" onkeyup="checkIfSendMsg(event, '@Model')"></textarea>
                    </div>
                    <div class="col-sm-2">
                        <input type="button" id="sendmessage" value="Ok" onclick="sendNewMsg('@Model')" />
                        <input type="hidden" id="displayname" value="Anonymous" />
                    </div>
                </div>
                <div class="row">
                    <div class="col_sm-12">
                        <ul id="discussion"></ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>