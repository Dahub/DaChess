@model string

@{
    ViewBag.Title = "Start";
}


<input type="hidden" id="isWhitePlayer" value="false" />
<input type="hidden" id="isBlackPlayer" value="false" />
<input type="hidden" id="token" value="" />

<h2>DaChess</h2>
<div class="row">
    <div class="col-md-2 col-md-offset-1">
        <div class="centerBlock">
            <button type="button" id="whiteBtn" class="btn-lg" disabled>Jouer avec les blancs</button>
        </div>
    </div>
    <div class="col-md-6">
        <div class="centerBlock">
            @Html.Partial("_Board")
        </div>
    </div>
    <div class="col-md-2">
        <div class="centerBlock">
            <button type="button" id="blackBtn" class="btn-lg" disabled>Jouer avec les noirs</button>
        </div>
    </div>
</div>
<br /><hr /><br />
<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Envoyer" />
        <input type="hidden" id="displayname" value="Lurker" />
        <ul id="discussion"></ul>
    </div>
</div>

<script type="text/javascript">
    var party = {
        Id: 0,
        Name: '',
        Board: '',
        WhiteToken: '',
        BlackToken: '',
        WhiteTurn: true,
        IsReady: false,
        WhiteAskToPlay: false,
        BlackAskToPlay: false,
    }

    $(document).ready(function () {
        // récupération de la partie
        var partyName = { name: '@Model' };
        $.ajax({
            url: '@(String.Concat(ConfigurationWrapper.Instance.WebApiUrl, "/api/party"))',
            data: partyName,
            cache: false,
            type: 'GET',
            dataType: "json",
            contentType: 'application/json; charset=utf-8'
        }).done(function (data) {
            mapParty(data);
            // on tente de voir si on a des données de cookies
            $.ajax({
                url: "/Player/GetPlayerPartyName",
                type: "get",
                success: function (dataPartyName) {
                    if (dataPartyName == partyName.name) {
                        $.ajax({
                            url: "/Player/GetPlayerToken",
                            type: "get",
                            success: function (dataToken) {
                                $('#token').val(dataToken);

                                // on récupère la couleur via l'API
                                $.ajax({
                                    url: '@(String.Concat(ConfigurationWrapper.Instance.WebApiUrl, "/api/player"))',
                                    data: { partyName: party.Name, token: dataToken },
                                    cache: false,
                                    type: 'GET',
                                    dataType: "json",
                                    contentType: 'application/json; charset=utf-8'
                                }).done(function (data) {
                                    if (data.IsWhite == true)
                                        ImWhitePlayer(dataToken);
                                    if (data.IsBlack == true)
                                        ImBlackPlayer(dataToken);
                                });
                            }
                        });
                    }
                    else {
                        if (false == isEmpty(party.WhiteToken)) {
                            $('#whiteBtn').prop('disabled', true);
                            $('#whiteBtn').removeClass('btn-success');
                        }
                        else {
                            $('#whiteBtn').prop('disabled', false);
                            $('#whiteBtn').addClass('btn-success');
                        }

                        if (false == isEmpty(party.BlackToken)) {
                            $('#blackBtn').prop('disabled', true);
                            $('#blackBtn').removeClass('btn-success');
                        }
                        else {
                            $('#blackBtn').prop('disabled', false);
                            $('#blackBtn').addClass('btn-success');
                        }
                    }
                }
            });
        });


        // abonnements aux clics sur les boutons
        $("#whiteBtn").click(function () {
            party.WhiteAskToPlay = true;
            addPlayer('white');
        });

        $("#blackBtn").click(function () {
            party.BlackAskToPlay = true;
            addPlayer('black');
        });
    });

    $(function () {
        var partyHub = $.connection.partyHub;
        partyHub.client.addNewMessageToPage = function (name, message) {
            $('#discussion').append('<li><strong>' + htmlEncode(name)
                + '</strong>: ' + htmlEncode(message) + '</li>');
        };

        partyHub.client.addPlayerWhite = function () {
            $('#whiteBtn').prop('disabled', true);
            $('#whiteBtn').html('Joueur connecté');
            $('#whiteBtn').removeClass('btn-success');
        };

        partyHub.client.addPlayerBlack = function () {
            $('#blackBtn').prop('disabled', true);
            $('#blackBtn').html('Joueur connecté');
            $('#blackBtn').removeClass('btn-success');
        };

        $('#displayname').val('Anonymous');
        $('#message').focus();
        $.connection.hub.start().done(function () {
            partyHub.server.joinParty('@Model');

            $('#sendmessage').click(function () {
                partyHub.server.sendMessage('@Model', $('#displayname').val(), $('#message').val());
                $('#message').val('').focus();
            });
        });
    });

    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }

    function addPlayer(color) {
        $.ajax({
            url: '@(String.Concat(ConfigurationWrapper.Instance.WebApiUrl, "/api/player"))',
            data: JSON.stringify(party),
            cache: false,
            type: 'POST',
            dataType: "json",
            contentType: 'application/json; charset=utf-8'
        }).done(function (data) {
            mapParty(data);

            if (color == 'white') {
                ImWhitePlayer(data.WhiteToken);
            }
            else {
                ImBlackPlayer(data.BlackToken);
            }

            // on créé les cookies via le playerController de ce site          
            $.ajax({
                url: "/Player/SetPlayerCookies",
                type: "get", 
                data: { partyName: party.Name, token: $('#token').val() }
            });
        });
    }

    function ImBlackPlayer(token) {
        var partyHub = $.connection.partyHub;
        $('#displayname').val('Noirs');
        $('#isBlackPlayer').val('true');
        $('#token').val(token);
        if ($('#whiteBtn').prop('disabled') == false) {
            $('#whiteBtn').prop('disabled', true);
            $('#whiteBtn').html('Attente du joueur');
            $('#whiteBtn').removeClass('btn-success');
        }
        partyHub.server.sendAddBlackPlayer('@Model');
    }

    function ImWhitePlayer(token) {
        var partyHub = $.connection.partyHub;
        $('#displayname').val('Blancs');
        $('#isWhitePlayer').val('true');
        $('#token').val(token);
        if ($('#blackBtn').prop('disabled') == false) {
            $('#blackBtn').prop('disabled', true);
            $('#blackBtn').html('Attente du joueur');
            $('#blackBtn').removeClass('btn-success');
        }
        partyHub.server.sendAddWhitePlayer('@Model');
    }

    function mapParty(data) {
        party.Id = data.Id;
        party.Name = data.Name;
        party.Board = data.Board;
        party.WhiteToken = data.WhiteToken;
        party.BlackToken = data.BlackToken;
        party.WhiteTurn = data.WhiteTurn;
        party.IsReady = data.IsReady;
    }

    function isEmpty(str) {
        return (!str || 0 === str.length);
    }
</script>

