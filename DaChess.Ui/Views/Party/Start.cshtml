@model string

@{
    ViewBag.Title = "Start";
}

@*<script type="text/javascript">
        var party = {
            Id: 0,
            Name: '',
            Board: '',
            WhiteToken: '',
            BlackToken: '',
            WhiteTurn: true,
            IsReady: false,
            WhiteAskToPlay: false,
            BlackAskToPlay: false,
        }

        $(document).ready(function () {

            reload();

            $("#whiteBtn").click(function () {
                party.WhiteAskToPlay = true;
                addPlayer();
            });

            $("#blackBtn").click(function () {
                party.BlackAskToPlay = true;
                addPlayer();
            });
        });

        function addPlayer() {
            $.ajax({
                url: '@(String.Concat(ConfigurationWrapper.Instance.WebApiUrl, "/api/player"))',
                data: JSON.stringify(party),
                cache: false,
                type: 'POST',
                dataType: "json",
                contentType: 'application/json; charset=utf-8'
            }).done(function (data) {
                console.log('post OK');
                // ici traitement token
            });
        }

        function reload() {
            var partyName = { name: '@Model' };
            $.ajax({
                url: '@(String.Concat(ConfigurationWrapper.Instance.WebApiUrl, "/api/party"))',
                data: partyName,
                cache: false,
                type: 'GET',
                dataType: "json",
                contentType: 'application/json; charset=utf-8'
            }).done(function (data) {
                mapParty(data);
                if (false == isEmpty(party.WhiteToken)) {
                    $('#whiteBtn').prop('disabled', true);
                    $('#whiteBtn').removeClass('btn-success');
                }
                if (false == isEmpty(party.BlackToken)) {
                    $('#blackBtn').prop('disabled', true);
                    $('#blackBtn').removeClass('btn-success');
                }
            });;
        }

        function mapParty(data) {
            party.Id = data.Id;
            party.Name = data.Name;
            party.Board = data.Board;
            party.WhiteToken = data.WhiteToken;
            party.BlackToken = data.BlackToken;
            party.WhiteTurn = data.WhiteTurn;
            party.IsReady = data.IsReady;
        }

        if (!!window.EventSource) {
            var source = new EventSource('@(String.Concat(ConfigurationWrapper.Instance.WebApiUrl, "/api/player?name=", @Model))');
            source.addEventListener('message', function (e) {
                console.log('nouveau message serveur !');
                mapParty(e.data);
                reload();
            }, false);
            source.addEventListener('open', function (e) {
                console.log("open!");
            }, false);
            source.addEventListener('error', function (e) {
                if (e.readyState == EventSource.CLOSED) {
                    console.log("error!");
                }
            }, false);
        }
        else {
            alert('Votre navigateur ne supporte pas cette application');
        }

        function isEmpty(str) {
            return (!str || 0 === str.length);
        }
    </script>*@

<h2>DaChess</h2>
<div class="row">
    <div class="col-md-1 col-md-offset-1">
        <h4>Blancs</h4>
        <button type="button" id="whiteBtn" class="btn-lg" disabled>Jouer avec les blancs</button>
    </div>
    <div class="col-md-8">
        <h4>Plateau</h4>

    </div>
    <div class="col-md-1">
        <h4>Noirs</h4>
        <button type="button" id="blackBtn" class="btn-lg" disabled>Jouer avec les noirs</button>
    </div>

</div>
<br /><br />
<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
        <ul id="discussion"></ul>
    </div>
</div>

<script>
    $(function () {
        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.partyHub;
        // Create a function that the hub can call back to display messages.
        chat.client.addNewMessageToPage = function (name, message) {
            // Add the message to the page.
            $('#discussion').append('<li><strong>' + htmlEncode(name)
                + '</strong>: ' + htmlEncode(message) + '</li>');
        };
        // Get the user name and store it to prepend to messages.
        $('#displayname').val('Anonymous');
        // Set initial focus to message input box.
        $('#message').focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                // Call the Send method on the hub.
                chat.server.send($('#displayname').val(), $('#message').val());
                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();
            });
        });
    });
    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
</script>

