@model string

@{
    ViewBag.Title = "Start";
}

<div style="display:none">
    <img id="b_rook" src="/Content/Images/Pieces/b_rook.svg" style="visibility:hidden" />
    <img id="b_knight" src="/Content/Images/Pieces/b_knight.svg" style="visibility:hidden" />
    <img id="b_bishop" src="/Content/Images/Pieces/b_bishops.svg" style="visibility:hidden" />
    <img id="b_queen" src="/Content/Images/Pieces/b_queen.svg" style="visibility:hidden" />
    <img id="b_king" src="/Content/Images/Pieces/b_king.svg" style="visibility:hidden" />
    <img id="b_pawn" src="/Content/Images/Pieces/b_pawn.svg" style="visibility:hidden" />
    <img id="w_rook" src="/Content/Images/Pieces/w_rook.svg" style="visibility:hidden" />
    <img id="w_knight" src="/Content/Images/Pieces/w_knight.svg" style="visibility:hidden" />
    <img id="w_bishop" src="/Content/Images/Pieces/w_bishops.svg" style="visibility:hidden" />
    <img id="w_queen" src="/Content/Images/Pieces/w_queen.svg" style="visibility:hidden" />
    <img id="w_king" src="/Content/Images/Pieces/w_king.svg" style="visibility:hidden" />
    <img id="w_pawn" src="/Content/Images/Pieces/w_pawn.svg" style="visibility:hidden" />
</div>

<input type="hidden" id="isWhitePlayer" value="false" />
<input type="hidden" id="isBlackPlayer" value="false" />
<input type="hidden" id="token" value="" />

<h2>Partie @Model</h2>

<!-- première ligne pour les infos -->
<div class="row">
    <div class="col-md-6 alignRight" id="whiteBtnDiv">
        <button type="button" id="whiteBtn" class="btn" disabled>Jouer avec les blancs</button><br />
    </div>
    <div class="col-md-6" id="blackBtnDiv">
        <button type="button" id="blackBtn" class="btn" disabled>Jouer avec les noirs</button>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <div id="msgDiv" class="alert alert-warning">Bienvenue</div>
    </div>
</div>
<br />


<script type="text/javascript">
    var party = {
        Id: 0,
        Name: '',
        Board: '',
        History: '',
        WhiteToken: '',
        BlackToken: '',
        WhiteTurn: true,
        IsReady: false,
        WhiteAskToPlay: false,
        BlackAskToPlay: false,
    }

    var size = 400;
    var caseNumber = 8;
    var caseSize = size / caseNumber;
    var pieceSize = (4 * caseSize) / 5;
    var piecePadding = caseSize / 10;

    var moveStep = 0;
    var moveText = '';
    var myBoard;
    var myHistory;

    $(document).ready(function () {
        // récupération de la partie
        var partyName = { name: '@Model' };
        console.log('plop');
        $.ajax({
            url: '/Party/Get',
            data: partyName,
            cache: false,
            type: 'GET',
            dataType: "json",
            contentType: 'application/json; charset=utf-8'
        }).done(function (data) {
            console.log(data);
            mapParty(data);
            myBoard = JSON.parse(party.Board);
            refreshCanvas();
            // on tente de voir si on a des données de cookies
            $.ajax({
                url: "/Player/GetPlayerPartyName",
                type: "get",
                success: function (dataPartyName) {
                    if (dataPartyName == partyName.name) {
                        $.ajax({
                            url: "/Player/GetPlayerToken",
                            type: "get",
                            success: function (dataToken) {
                                $('#token').val(dataToken);

                                // on récupère la couleur via l'API
                                $.ajax({
                                    url: '/Player/GetPlayerInfo',
                                    data: { partyName: party.Name, token: dataToken },
                                    cache: false,
                                    type: 'GET',
                                    dataType: "json",
                                    contentType: 'application/json; charset=utf-8'
                                }).done(function (data) {
                                    if (data.IsWhite == true)
                                        ImWhitePlayer(dataToken);
                                    if (data.IsBlack == true)
                                        ImBlackPlayer(dataToken);
                                });
                            }
                        });
                    }
                    else {
                        if (false == isEmpty(party.WhiteToken)) {
                            $('#whiteBtn').prop('disabled', true);
                            $('#whiteBtn').removeClass('btn-success');
                        }
                        else {
                            $('#whiteBtn').prop('disabled', false);
                            $('#whiteBtn').addClass('btn-success');
                        }

                        if (false == isEmpty(party.BlackToken)) {
                            $('#blackBtn').prop('disabled', true);
                            $('#blackBtn').removeClass('btn-success');
                        }
                        else {
                            $('#blackBtn').prop('disabled', false);
                            $('#blackBtn').addClass('btn-success');
                        }
                    }
                }
            });

            RefreshPartyState();
        });

        $('#message').on('keyup', function (e) {
            if (e.keyCode === 13) {
                $('#sendmessage').click();
            }
        });

        // abonnements aux clics sur les boutons
        $("#whiteBtn").click(function () {
            party.WhiteAskToPlay = true;
            addPlayer('white');
        });

        $("#blackBtn").click(function () {
            party.BlackAskToPlay = true;
            addPlayer('black');
        });
    });

    $(function () {
        var partyHub = $.connection.partyHub;
        partyHub.client.addNewMessageToPage = function (name, message) {

            if ($("#discussion li").length > 10) {
                $('#discussion li:last').remove();
            }

            $('#discussion').prepend('<li><strong>' + htmlEncode(name)
                + '</strong>: ' + htmlEncode(message) + '</li>');
        };

        partyHub.client.addPlayerWhite = function () {
            $('#whiteBtn').prop('disabled', true);
            $('#whiteBtn').html('Joueur connecté');
            $('#whiteBtn').removeClass('btn-success');

            // on recharge la partie
            reloadParty();
        };

        partyHub.client.addPlayerBlack = function () {
            $('#blackBtn').prop('disabled', true);
            $('#blackBtn').html('Joueur connecté');
            $('#blackBtn').removeClass('btn-success');

            // on recharge la partie
            reloadParty();
        };

        partyHub.client.moveOver = function () {
            reloadParty();
        }

        $('#displayname').val('Anonymous');
        $('#message').focus();
        $.connection.hub.start().done(function () {
            partyHub.server.joinParty('@Model');
            $('#sendmessage').click(function () {
                partyHub.server.sendMessage('@Model', $('#displayname').val(), $('#message').val());
                $('#message').val('').focus();
            });
        });
    });

    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }

    function setMsg(msg) {
        $('#msgDiv').html(msg);
    }

    function reloadParty() {
        console.log('reload de la partie');

        var partyName = { name: '@Model' };
        $.ajax({
            url: '/Party/Get',
            data: partyName,
            cache: false,
            type: 'GET',
            dataType: "json",
            contentType: 'application/json; charset=utf-8'
        }).done(function (data) {
            mapParty(data);
            RefreshPartyState();
            myBoard = JSON.parse(party.Board);
            myHistory = JSON.parse(party.History);
            refreshCanvas();
            refreshHistory();
        });
    }

    function refreshHistory()
    {
        console.log(myHistory);
        console.log(myHistory.Moves);
        $('#moves').empty();
        jQuery.each(myHistory.Moves, function (i, val) {
            $('#moves').prepend('<li><strong>' + htmlEncode(i)
               + '</strong>: ' + htmlEncode(val) + '</li>');
        });
    }

    function addPlayer(color) {
        $.ajax({
            url: '/Party/AddPlayerToParty',
            data: JSON.stringify(party),
            cache: false,
            type: 'POST',
            dataType: "json",
            contentType: 'application/json; charset=utf-8'
        }).done(function (data) {
            mapParty(data);
            RefreshPartyState();

            if (color == 'white') {
                ImWhitePlayer(data.WhiteToken);
            }
            else {
                ImBlackPlayer(data.BlackToken);
            }

            // on créé les cookies via le playerController de ce site
            $.ajax({
                url: "/Player/SetPlayerCookies",
                type: "get",
                data: { partyName: party.Name, token: $('#token').val() }
            });
        });
    }

    function ImBlackPlayer(token) {
        var partyHub = $.connection.partyHub;
        $('#displayname').val('Noirs');
        $('#isBlackPlayer').val('true');
        $('#token').val(token);
        $('#colorDiv').html('Vous jouez les noirs');
        $('#whiteBtn').addClass('hidden');
        $('#blackBtn').addClass('hidden');
        $('#blackIcon').removeClass('hidden');
        partyHub.server.sendAddBlackPlayer('@Model');
    }

    function ImWhitePlayer(token) {
        var partyHub = $.connection.partyHub;
        $('#displayname').val('Blancs');
        $('#isWhitePlayer').val('true');
        $('#token').val(token);
        $('#colorDiv').html('Vous jouez les blancs');
        $('#whiteBtn').addClass('hidden');
        $('#blackBtn').addClass('hidden');
        $('#whiteIcon').removeClass('hidden');
        partyHub.server.sendAddWhitePlayer('@Model');
    }

    function RefreshPartyState() {
        $('#infoDiv').html('');
        if (party.IsReady == true) {
            $('#infoDiv').html('Partie prête');
        }
        else if (isEmpty(party.BlackToken) == false) {
            $('#infoDiv').html('En attente du joueur blanc');
        }
        else if (isEmpty(party.WhiteToken) == false) {
            $('#infoDiv').html('En attente du joueur noir');
        }
        else {
            $('#infoDiv').html('En attente de joueurs');
        }

        $('#turnDiv').html('');
        if (party.WhiteTurn == true) {
            $('#turnDiv').html('Aux blancs de jouer');
        }
        else {
            $('#turnDiv').html('Aux noirs de jouer');
        }
    }

    function mapParty(data) {
        party.Id = data.Id;
        party.Name = data.Name;
        party.Board = data.Board;
        party.WhiteToken = data.WhiteToken;
        party.BlackToken = data.BlackToken;
        party.WhiteTurn = data.WhiteTurn;
        party.IsReady = data.IsReady;
        party.History = data.History;
    }

    function refreshCanvas() {
        var c = $("#canvas");
        var ctx = c[0].getContext('2d');
        ctx.clearRect(0, 0, size, size);

        ctx.fillStyle = "#ffff99";
        ctx.fillRect(0, 0, size, size);

        ctx.fillStyle = "#cc6600";
        var startCase = 1;
        for (posY = 0; posY < caseNumber; posY = posY + 1) {
            for (posX = startCase; posX < caseNumber; posX = posX + 2) {
                ctx.fillRect(posX * caseSize, posY * caseSize, caseSize, caseSize);
            }
            if (startCase == 1) {
                startCase = 0;
            }
            else {
                startCase = 1;
            }
        }

        for (var i = 0; i < myBoard.board.length; i++) {
            if (isEmpty(myBoard.board[i].piece) == false) {
                var xPos = ((letterToNumber(myBoard.board[i].col) - 1) * caseSize) + piecePadding;
                var yPos = ((caseNumber - myBoard.board[i].line) * caseSize) + piecePadding;
                var myImage = document.querySelector('#' + myBoard.board[i].piece + '');
                ctx.drawImage(myImage, xPos, yPos, pieceSize, pieceSize);
            }
        }
    }

    function getMousePos(canvas, evt) {
        if (playerTurn() == true) {
            if (moveStep == 2) {
                resetCanvasMove();
            }
            moveStep++;

            var rect = canvas.getBoundingClientRect();
            var xcord = evt.clientX - rect.left
            var ycord = evt.clientY - rect.top

            // y => chiffres
            ycord = caseNumber - Math.trunc(ycord / caseSize);
            xcord = Math.trunc(xcord / caseSize);
            var result = String.fromCharCode(97 + xcord) + ycord.toString();

            if (moveText == result + ' ') // clic sur la même case, on reprends à 0
            {
                resetCanvasMove();
            }
            else if (isLegalCase(result) == true) {
                var c = $("#canvas");
                var ctx = c[0].getContext('2d');

                ctx.fillStyle = 'rgba(23, 105, 138, 0.5)';
                ctx.fillRect(xcord * caseSize, size - ycord * caseSize, caseSize, caseSize);

                moveText += result;
                moveText += ' ';
                if (moveStep == 2) {
                    $.ajax({
                        url: '/Party/MakeMove',
                        data: { name: party.Name, move: moveText, token: $('#token').val() },
                        cache: false,
                        type: 'GET',
                        dataType: "json",
                        contentType: 'application/json; charset=utf-8'
                    }).done(function (data) {
                        $.connection.partyHub.server.newMove('@Model');
                        if (data.IsError == true) {
                            setMsg(data.ErrorMessage);
                        }
                    });
                }
            }
            else {
                moveStep--;
            }
        }
    }

    // on vérifie qu'on a bien sélectionné une case valide
    // par exemple : une pièce de la couleur du joueur pour la case de départ
    function isLegalCase(myCase) {
        var col = myCase.charAt(0);
        var line = myCase.charAt(1);
        var caseFind = false;

        for (var i = 0; i < myBoard.board.length; i++) {
            if (myBoard.board[i].col == col && myBoard.board[i].line == line) {
                caseFind = true;
                if (moveStep == 1 && isEmpty(myBoard.board[i].piece))
                    return false;
                if (moveStep == 1) {
                    if ($('#isBlackPlayer').val() == 'true' && myBoard.board[i].piece.charAt(0) == 'w')
                        return false;
                    if ($('#isWhitePlayer').val() == 'true' && myBoard.board[i].piece.charAt(0) == 'b')
                        return false;
                }
                else if (moveStep == 2) {
                    if ($('#isBlackPlayer').val() == 'true' && myBoard.board[i].piece.charAt(0) == 'b')
                        return false;
                    if ($('#isWhitePlayer').val() == 'true' && myBoard.board[i].piece.charAt(0) == 'w')
                        return false;
                }
            }
        }
        if (moveStep == 1 && caseFind == false)
            return false;

        return true;
    }

    function resetCanvasMove() {
        refreshCanvas();
        moveStep = 0;
        moveText = '';
    }

    function playerTurn() {
        if (party.IsReady == false) {
            return false;
        }
        else if (party.WhiteTurn == true && $('#isBlackPlayer').val() == 'true') {
            return false;
        }
        else if (party.WhiteTurn == false && $('#isWhitePlayer').val() == 'true') {
            return false;
        }
        else if ($('#isBlackPlayer').val() == 'false' && $('#isWhitePlayer').val() == 'false') {
            return false;
        }
        else {
            return true;
        }
    }

    function letterToNumber(letter) {
        return letter.charCodeAt(0) - 96;
    }

    function isEmpty(str) {
        return (!str || 0 === str.length);
    }
</script>

<!-- ligne avec les coups, le plateau et le tchat -->
<div class="row">
    <div class="col-md-3" id="moveDiv">
        <div class="panel panel-default">
            <div class="panel-heading">Infos</div>
            <div class="panel-body">
                <div id="infoDiv"></div><br />
                <img src="/Content/Images/black_active.png" class="playerIcon hidden" id="blackIcon" />
                <img src="/Content/Images/white_active.png" class="playerIcon hidden" id="whiteIcon" />
                <span id="colorDiv"></span>

            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">Historique</div>
            <div class="panel-body">
                <ul id="moves"></ul>
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="panel panel-default">
            <div class="panel-heading" id="turnDiv"></div>
            <div class="panel-body">
                <div class="centerBlock">
                    <canvas id="canvas" width="400" height="400" style="border:1px solid #000000;" onclick="getMousePos(this, event)"></canvas>
                </div>
            </div>
        </div>

    </div>
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">Tchat</div>
            <div class="panel-body">
                <textarea id="message" rows="2" cols="40"></textarea>
                <input type="button" id="sendmessage" value="Ok" />
                <input type="hidden" id="displayname" value="Lurker" />
                <br /><br />
                <ul id="discussion"></ul>
            </div>
        </div>

    </div>
</div>


