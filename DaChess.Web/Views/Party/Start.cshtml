@model string

@{
    ViewBag.Title = "Start";
}

<input type="hidden" id="token" value="" />

<br />

<!-- première ligne pour les infos -->
<div class="row">
    <div class="col-md-6">
        <h1>Partie @Model</h1>
    </div>
    <div id="msgDivParent" class="col-md-6" style="display:none">
        <div id="msgDiv" class="alert alert-warning">Bienvenue</div>
    </div>
</div>
<br />

<div class="row">
    <div class="col-md-6 alignRight" id="whiteBtnDiv">
        <button type="button" id="whiteBtn" class="btn" disabled>Jouer avec les blancs</button><br />
    </div>
    <div class="col-md-6" id="blackBtnDiv">
        <button type="button" id="blackBtn" class="btn" disabled>Jouer avec les noirs</button>
    </div>
</div>
<br />

<!-- Modal pour la partie nulle -->
<div class="modal fade" id="confirmDrawnModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Demande de partie nulle</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="centerBlock">
                            <div>Voulez-vous accepter l'annulation de cette partie ?</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn btn-primary" id="confirmDrawnBtn">Oui</button>
                <button type="button" data-dismiss="modal" class="btn" id="refuseDrawn">Non</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal box pour le mat -->
<div class="modal fade" id="matModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Echec et Mat !</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="centerBlock">
                            <div id="matText"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="validMat" class="btn btn-primary" data-dismiss="modal">Valider</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal box pour le pat -->
<div class="modal fade" id="patModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Pat</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="centerBlock">
                            <div id="patText"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="validPat" class="btn btn-primary" data-dismiss="modal">Valider</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal box pour la promotion -->
<div class="modal fade" id="promoteModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Choisissez une pièce</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="centerBlock">
                            <img src="/Content/Images/Pieces/b_knight.svg" style="width:45px;height:45px;" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="centerBlock">
                            <img src="/Content/Images/Pieces/w_bishops.svg" style="width:45px;height:45px;" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="centerBlock">
                            <img src="/Content/Images/Pieces/b_rook.svg" style="width:45px;height:45px;" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="centerBlock">
                            <img src="/Content/Images/Pieces/w_queen.svg" style="width:45px;height:45px;" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="centerBlock">
                            <input type="radio" id="promotedChoise" name="promotedChoise" value="knight" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="centerBlock">
                            <input type="radio" id="promotedChoise" name="promotedChoise" value="bishop" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="centerBlock">
                            <input type="radio" id="promotedChoise" name="promotedChoise" value="rook" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="centerBlock">
                            <input type="radio" id="promotedChoise" name="promotedChoise" value="queen" checked="checked" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="validPromote" class="btn btn-primary" data-dismiss="modal">Valider</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de confirmation -->
<div id="confirm" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                Etes vous sur ?
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn btn-primary" id="confirmBtn">Oui</button>
                <button type="button" data-dismiss="modal" class="btn">Non</button>
            </div>
        </div>
    </div>
</div>

<!-- ligne avec les coups, le plateau et le tchat -->
<div class="row">
    <div class="col-md-3" id="moveDiv">
        <div class="panel panel-default">
            <div class="panel-heading">Infos</div>
            <div class="panel-body">
                <div id="infoDiv"></div><br />
                <img src="/Content/Images/black_active.png" class="playerIcon hidden" id="blackIcon" />
                <img src="/Content/Images/white_active.png" class="playerIcon hidden" id="whiteIcon" />
                <span id="colorDiv"></span>
                <br /><br />
                <span id="btnDiv" style="display:none">
                    <button type="button" id="btnResign" name="btnResign" class="btn btn-default btn-xs">Abandonner</button>
                    <button type="button" id="btnDrawn" name="btnDrawn" class="btn btn-default btn-xs">Proposer la nulle</button>
                </span>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">Historique</div>
            <div class="panel-body">
                <ul id="moves"></ul>
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <div class="panel panel-default">
            <div class="panel-heading" id="turnDiv"></div>
            <div class="panel-body">
                <div class="centerBlock">
                    <canvas id="canvas" width="400" height="400" style="border:1px solid #000000;" onclick="getMousePos(this, event)"></canvas>
                </div>
            </div>
        </div>

    </div>
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">Tchat</div>
            <div class="panel-body">
                <textarea id="message" rows="2" cols="40"></textarea>
                <input type="button" id="sendmessage" value="Ok" />
                <input type="hidden" id="displayname" value="Lurker" />
                <br /><br />
                <ul id="discussion"></ul>
            </div>
        </div>

    </div>
</div>

<script src="/scripts/daChess/dachess.tools.js"></script>
<script src="/scripts/daChess/dachess.party.js"></script>
<script src="/scripts/daChess/dachess.canvas.js"></script>

<script type="text/javascript">
    var party;
    var size = 400;
    var caseNumber = 8;
    var caseSize = size / caseNumber;
    var pieceSize = (4 * caseSize) / 5;
    var piecePadding = caseSize / 10;
    var moveStep = 0;
    var moveText = '';
    var myBoard;
    var myHistory;
    var partyOver = false;
    var isWhitePlayer = false;
    var isBlackPlayer = false;
    var images = {};

    var sources = {
        b_rook: '/Content/Images/Pieces/b_rook.svg',
        b_knight: '/Content/Images/Pieces/b_knight.svg',
        b_bishop: '/Content/Images/Pieces/b_bishops.svg',
        b_queen: '/Content/Images/Pieces/b_queen.svg',
        b_king: '/Content/Images/Pieces/b_king.svg',
        b_pawn: '/Content/Images/Pieces/b_pawn.svg',
        w_rook: '/Content/Images/Pieces/w_rook.svg',
        w_knight: '/Content/Images/Pieces/w_knight.svg',
        w_bishop: '/Content/Images/Pieces/w_bishops.svg',
        w_queen: '/Content/Images/Pieces/w_queen.svg',
        w_king: '/Content/Images/Pieces/w_king.svg',
        w_pawn: '/Content/Images/Pieces/w_pawn.svg'
    };

    $(document).ready(function () {
        $(function () {
            loadImages(sources, function () {
                var partyHub = $.connection.partyHub;

                $('#displayname').val('Anonymous');
                $('#message').focus();
                $('#message').on('keyup', function (e) {
                    if (e.keyCode === 13) {
                        $('#sendmessage').click();
                    }
                });

                // abonnements aux clics sur les boutons
                $("#whiteBtn").click(function () {
                    party.WhiteAskToPlay = true;
                    addPlayer('white');
                });

                $("#blackBtn").click(function () {
                    party.BlackAskToPlay = true;
                    addPlayer('black');
                });

                $('#btnDrawn').click(function () {
                    $.connection.partyHub.server.askForDrawn('@Model');
                });

                $('button[name="btnResign"]').on('click', function (e) {
                    e.preventDefault();
                    $('#confirm').modal({ backdrop: 'static', keyboard: false })
                        .one('click', '#confirmBtn', function (e) {
                            // abandon du joueur
                            $.ajax({
                                url: '/Party/Resign',
                                data: { name: party.Name, token: $('#token').val() },
                                cache: false,
                                type: 'GET',
                                dataType: "json",
                                contentType: 'application/json; charset=utf-8'
                            }).done(function (data) {
                                $.connection.partyHub.server.aPlayerResign('@Model');
                                $.connection.partyHub.server.newInfo('@Model', data.InfoMessage);
                            });
                        });
                });

                $.connection.hub.start().done(function () {
                    partyHub.server.joinParty('@Model');
                    $('#sendmessage').click(function () {
                        partyHub.server.sendMessage('@Model', $('#displayname').val(), $('#message').val());
                        $('#message').val('').focus();
                    });
                });

                partyHub.client.addNewMessageToPage = function (name, message) {
                    if ($("#discussion li").length > 10) {
                        $('#discussion li:last').remove();
                    }

                    $('#discussion').prepend('<li><strong>' + htmlEncode(name)
                        + '</strong>: ' + htmlEncode(message) + '</li>');
                };


                partyHub.client.addPlayerWhite = function () {
                    $('#whiteBtn').prop('disabled', true);
                    $('#whiteBtn').html('Joueur connecté');
                    $('#whiteBtn').removeClass('btn-success');

                    // on recharge la partie
                    reloadParty();
                };

                partyHub.client.addPlayerBlack = function () {
                    $('#blackBtn').prop('disabled', true);
                    $('#blackBtn').html('Joueur connecté');
                    $('#blackBtn').removeClass('btn-success');

                    // on recharge la partie
                    reloadParty();
                };

                partyHub.client.moveOver = function () {
                    reloadParty();
                }

                partyHub.client.SendInfo = function (info) {
                    setMsg(info);
                }

                partyHub.client.playerResign = function () {
                    reloadParty();
                }

                partyHub.client.playerAskDrawn = function () {
                    if (isBlackPlayer == true || isWhitePlayer == true) {
                        $('#confirmDrawnModal').modal({ backdrop: 'static', keyboard: false })
                            .one('click', '#confirmDrawnBtn', function (e) {
                                $.ajax({
                                    url: '/Party/Drawn',
                                    data: { name: party.Name, token: $('#token').val() },
                                    cache: false,
                                    type: 'GET',
                                    dataType: "json",
                                    contentType: 'application/json; charset=utf-8'
                                }).done(function (data) {
                                    $.connection.partyHub.server.newInfo('@Model', data.InfoMessage);
                                    partyHub.server.aPlayerAcceptDrawn('@Model', $('#token').val());
                                });
                            }).one('click', '#refuseDrawn', function (e) {
                                var msgDrawn = '';
                                if (isBlackPlayer == true)
                                    msgDrawn = 'Les noirs refusent la nulle';
                                else if (isWhitePlayer == true)
                                    msgDrawn = 'les Blancs refusent la nulle';
                                $.connection.partyHub.server.newInfo('@Model', msgDrawn);
                            });
                    }
                }

                partyHub.client.playerAcceptDrawn = function (playerToken) {
                    reloadParty();
                }

                // récupération de la partie
                initPartyInfo('@Model');
                addPromoteValidation('@Model');
            });
        });
    });

    function setMsg(msg) {
        if (isEmpty(msg)) {
            $('#msgDivParent').hide();
        } else {
            $('#msgDivParent').show();
        }
        $('#msgDiv').html(msg);
    }

    function reloadParty() {
        var partyName = { name: '@Model' };
        $.ajax({
            url: '/Party/Get',
            data: partyName,
            cache: false,
            type: 'GET',
            dataType: "json",
            contentType: 'application/json; charset=utf-8'
        }).done(function (data) {
            party = data;
            RefreshPartyState();
            myBoard = JSON.parse(party.Board);
            myHistory = JSON.parse(party.History);
            refreshCanvas(myBoard.board);
            refreshHistory();
            checkPromote();
            checkCheckMat();
            checkPat();
        });
    }

    function checkPat() {
        if ((party.WhiteIsPat || party.BlackIsPat) && partyOver == false) {
            if (isWhitePlayer == true && party.BlackIsPat == true
               || isBlackPlayer == true && party.WhiteIsPat == true) {
                $('#patText').html('<h3>Le roi adverse est Pat</h3>')
            }
            else {
                $('#patText').html('<h3>Vous êtes Pat</h3>')
            }
            partyOver = true;
            $('#patModal').modal('show');
        }
    }

    function checkCheckMat() {
        if ((party.WhiteIsCheckMat || party.BlackIsCheckMat) && partyOver == false) {
            if (isWhitePlayer == true && party.BlackIsCheckMat == true
                || isBlackPlayer == true && party.WhiteIsCheckMat == true) {
                $('#matText').html('<h3>Vous avez gagné</h3>')
            }
            else {
                $('#matText').html('<h3>Vous avez perdu :(</h3>')
            }
            partyOver = true;
            $('#matModal').modal('show');
        }
    }

    function checkPromote() {
        if (party.WhiteCanPromote && isWhitePlayer == true) {
            $('#promoteModal').modal('show');
        }
        else if (party.BlackCanPromote && isBlackPlayer == true) {
            $('#promoteModal').modal('show');
        }
    }

    function refreshHistory() {
        $('#moves').empty();
        if (myHistory) {
            jQuery.each(myHistory.Moves, function (i, val) {
                $('#moves').prepend('<li><strong>' + htmlEncode(i)
                   + '</strong>: ' + htmlEncode(val) + '</li>');
            });
        }
    }

    function addPlayer(color) {
        $.ajax({
            url: '/Party/AddPlayerToParty',
            data: JSON.stringify(party),
            cache: false,
            type: 'POST',
            dataType: "json",
            contentType: 'application/json; charset=utf-8'
        }).done(function (data) {
            party = data;
            RefreshPartyState();

            if (color == 'white') {
                ImWhitePlayer(data.WhiteToken);
            }
            else {
                ImBlackPlayer(data.BlackToken);
            }

            // on créé les cookies via le playerController de ce site
            $.ajax({
                url: "/Player/SetPlayerCookies",
                type: "get",
                data: { partyName: party.Name, token: $('#token').val() }
            });
        });
    }

    function ImBlackPlayer(token) {
        var partyHub = $.connection.partyHub;
        $('#displayname').val('Noirs');
        isBlackPlayer = true;
        $('#token').val(token);
        $('#colorDiv').html('Vous jouez les noirs');
        $('#whiteBtn').addClass('hidden');
        $('#blackBtn').addClass('hidden');
        $('#blackIcon').removeClass('hidden');
        partyHub.server.sendAddBlackPlayer('@Model');
    }

    function ImWhitePlayer(token) {
        var partyHub = $.connection.partyHub;
        $('#displayname').val('Blancs');
        isWhitePlayer = true;
        $('#token').val(token);
        $('#colorDiv').html('Vous jouez les blancs');
        $('#whiteBtn').addClass('hidden');
        $('#blackBtn').addClass('hidden');
        $('#whiteIcon').removeClass('hidden');
        partyHub.server.sendAddWhitePlayer('@Model');
    }

    function RefreshPartyState() {
        $('#infoDiv').html('');
        if (party.PartyOver === true) {
            $('#infoDiv').html('Partie terminée');
        }
        else if (party.IsReady == true) {
            $('#infoDiv').html('Partie prête');
        }
        else if (isEmpty(party.BlackToken) == false) {
            $('#infoDiv').html('En attente du joueur blanc');
        }
        else if (isEmpty(party.WhiteToken) == false) {
            $('#infoDiv').html('En attente du joueur noir');
        }
        else {
            $('#infoDiv').html('En attente de joueurs');
        }
        $('#turnDiv').html('');
        if (party.WhiteTurn == true) {
            $('#turnDiv').html('Aux blancs de jouer');
        }
        else {
            $('#turnDiv').html('Aux noirs de jouer');
        }
        if (party.IsReady && (isBlackPlayer == true || isWhitePlayer == true)) {
            $('#btnDiv').show();
        }
        else {
            $('#btnDiv').hide();
        }
    }

    function getMousePos(canvas, evt) {
        if (playerTurn(party, isWhitePlayer, isBlackPlayer) == true) {
            if (moveStep == 2) {
                resetCanvasMove(myBoard.board);
            }
            moveStep++;

            var rect = canvas.getBoundingClientRect();
            var xcord = evt.clientX - rect.left
            var ycord = evt.clientY - rect.top

            // y => chiffres
            ycord = caseNumber - Math.trunc(ycord / caseSize);
            xcord = Math.trunc(xcord / caseSize);
            var result = String.fromCharCode(97 + xcord) + ycord.toString();

            if (moveText == result + ' ') // clic sur la même case, on reprends à 0
            {
                resetCanvasMove(myBoard.board);
            }
            else if (isLegalCase(result, myBoard.board) == true) {
                var c = $("#canvas");
                var ctx = c[0].getContext('2d');

                ctx.fillStyle = 'rgba(23, 105, 138, 0.5)';
                ctx.fillRect(xcord * caseSize, size - ycord * caseSize, caseSize, caseSize);

                moveText += result;
                moveText += ' ';
                if (moveStep == 2) {
                    $.ajax({
                        url: '/Party/MakeMove',
                        data: { name: party.Name, move: moveText, token: $('#token').val() },
                        cache: false,
                        type: 'GET',
                        dataType: "json",
                        contentType: 'application/json; charset=utf-8'
                    }).done(function (data) {
                        $.connection.partyHub.server.newMove('@Model');
                        if (data.IsError == true) {
                            setMsg(data.ErrorMessage);
                        }
                        else {
                            $.connection.partyHub.server.newInfo('@Model', data.InfoMessage);
                        }
                    });
                }
            }
            else {
                moveStep--;
            }
        }
    }
</script>
